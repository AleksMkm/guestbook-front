{"version":3,"sources":["components/container/Container.jsx","components/header/Header.jsx","components/footer/Footer.jsx","components/section/Section.jsx","redux/thunks/recordsThunks.js","redux/slices/recordsSlice.js","redux/selectors/recordsSelectors.js","utils/recordFieldsValidator.js","components/form/Form.jsx","components/recordList/Record.jsx","components/loader/Loader.jsx","components/recordList/RecordList.jsx","views/RecordsView.jsx","App.js","redux/store/store.js","index.js"],"names":["Container","children","className","Header","Footer","Section","title","flex","auxClass","flexClass","auxClassName","fullWidthClass","fullWidth","axios","defaults","baseURL","createRecord","createAsyncThunk","a","name","message","rejectWithValue","post","response","data","record","getRecords","_","get","initialState","records","isLoading","isMessageUploading","errors","recordsThunks","recordsSlice","createSlice","reducers","changeName","state","payload","changeMessage","setErrors","clearNameError","clearMessageError","clearErrors","extraReducers","fulfilled","pending","rejected","reducer","actions","recordFieldsValidator","isNameValid","isMessageValid","test","isValid","Form","useSelector","recordsSelectors","dispatch","useDispatch","btn","useRef","onSubmit","e","preventDefault","current","blur","recordsActions","onChange","target","value","type","placeholder","rows","ref","disabled","Record","Loader","size","margin","color","loading","RecordsList","useEffect","length","map","_id","RecordsView","RecordList","App","store","configureStore","recordsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b230024.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Container({ children }) {\n  return <div className=\"container\">{children}</div>\n}\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className=\"header\">\r\n        Guestbook\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <div className=\"footer\">\r\n        (c) meaningful footer :)\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\n\nfunction Section({ title, children, flex, auxClass, fullWidth }) {\n  const flexClass = flex ? 'flex' : ''\n  const auxClassName = auxClass ? auxClass : ''\n  const fullWidthClass = fullWidth ? 'fullWidth' : ''\n\n  return (\n    <section className={`section ${flexClass} ${fullWidthClass} ${auxClassName}`}>\n      <p className=\"section-title\">{title}</p>\n      {children}\n    </section>\n  )\n}\n\nexport default Section\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://guestbook-am.herokuapp.com/api'\r\n\r\nconst createRecord = createAsyncThunk(\r\n  'records/createRecord',\r\n  async ({ name, message }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/records', { name, message })\r\n      return response.data.data.record\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message)\r\n    }\r\n  }\r\n)\r\n\r\nconst getRecords = createAsyncThunk(\r\n  'records/getRecords',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get('/records')\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.message)\r\n    }\r\n  }\r\n)\r\n\r\nexport default {\r\n  createRecord,\r\n  getRecords\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport recordsThunks from '../thunks/recordsThunks'\r\n\r\nconst initialState = {\r\n  records: [],\r\n  name: '',\r\n  message: '',\r\n  isLoading: false,\r\n  isMessageUploading: false,\r\n  errors: {\r\n    name: null,\r\n    message: null\r\n  }\r\n}\r\n\r\nconst { createRecord, getRecords } = recordsThunks\r\n\r\nconst recordsSlice = createSlice({\r\n  name: 'records',\r\n  initialState,\r\n  reducers: {\r\n    changeName: (state, { payload }) => {\r\n      state.name = payload\r\n    },\r\n    changeMessage: (state, { payload }) => {\r\n      state.message = payload\r\n    },\r\n    setErrors: (state, { payload }) => {\r\n      state.errors = payload\r\n    },\r\n    clearNameError: (state) => {\r\n      state.errors.name = null\r\n    },\r\n    clearMessageError: (state) => {\r\n      state.errors.message = null\r\n    },\r\n    clearErrors: (state) => {\r\n      state.errors = initialState.errors\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getRecords.fulfilled](state, { payload }) {\r\n      state.records = payload\r\n      state.isLoading = false\r\n    },\r\n    [getRecords.pending](state) {\r\n      state.errors = {}\r\n      state.isLoading = true\r\n    },\r\n    [getRecords.rejected](state, { payload }) {\r\n      state.errors = payload\r\n      state.isLoading = false\r\n    },\r\n    [createRecord.fulfilled](state, { payload }) {\r\n      state.records = [\r\n        payload,\r\n        ...state.records\r\n      ]\r\n      state.isMessageUploading = false\r\n      state.message = ''\r\n    },\r\n    [createRecord.pending](state) {\r\n      state.errors = {}\r\n      state.isMessageUploading = true\r\n    },\r\n    [createRecord.rejected](state, { payload }) {\r\n      state.errors = payload\r\n      state.isMessageUploading = false\r\n    }\r\n  }\r\n})\r\n\r\nexport const reducer = recordsSlice.reducer\r\nexport const actions = recordsSlice.actions\r\n","const recordsSelector = state => state.records.records\r\nconst nameSelector = state => state.records.name\r\nconst messageSelector = state => state.records.message\r\nconst isLoadingSelector = state => state.records.isLoading\r\nconst isMessageUploadingSelector = state => state.records.isMessageUploading\r\nconst errorsSelector = state => state.records.errors\r\n\r\nexport default {\r\n  recordsSelector,\r\n  nameSelector,\r\n  messageSelector,\r\n  isLoadingSelector,\r\n  isMessageUploadingSelector,\r\n  errorsSelector\r\n}\r\n","const recordFieldsValidator = (name, message) => {\r\n  let errors = {}\r\n  let isNameValid = true\r\n  let isMessageValid = true\r\n  const nameRegex = /^\\w+$/\r\n\r\n  if (!name) {\r\n    errors = {\r\n      ...errors,\r\n      name: 'Can\\'t be blank'\r\n    }\r\n    isNameValid = false\r\n  }\r\n\r\n  if (name && !nameRegex.test(name)) {\r\n    errors = {\r\n      ...errors,\r\n      name: 'Only latin characters, numbers and underscore are allowed'\r\n    }\r\n    isNameValid = false\r\n  }\r\n\r\n  if (!message) {\r\n    errors = {\r\n      ...errors,\r\n      message: 'Can\\'t be blank'\r\n    }\r\n    isMessageValid = false\r\n  }\r\n\r\n  return {\r\n    isValid: isNameValid && isMessageValid,\r\n    errors\r\n  }\r\n}\r\n\r\nexport default recordFieldsValidator\r\n","import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { actions as recordsActions } from '../../redux/slices/recordsSlice'\r\nimport recordsSelectors from '../../redux/selectors/recordsSelectors'\r\nimport recordFieldsValidator from '../../utils/recordFieldsValidator'\r\nimport recordsThunks from '../../redux/thunks/recordsThunks'\r\n\r\nconst Form = () => {\r\n  const name = useSelector(recordsSelectors.nameSelector)\r\n  const message = useSelector(recordsSelectors.messageSelector)\r\n  const isMessageUploading = useSelector(recordsSelectors.isMessageUploadingSelector)\r\n  const errors = useSelector(recordsSelectors.errorsSelector)\r\n\r\n  const dispatch = useDispatch()\r\n  const btn = useRef()\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    btn.current.blur()\r\n    dispatch(recordsActions.clearErrors())\r\n\r\n    const { isValid, errors } = recordFieldsValidator(name, message)\r\n\r\n    if (!isValid) {\r\n      dispatch(recordsActions.setErrors(errors))\r\n      return\r\n    }\r\n\r\n    dispatch(recordsThunks.createRecord({ name, message }))\r\n  }\r\n\r\n  const onNameChange = (e) => {\r\n    dispatch(recordsActions.clearNameError())\r\n    dispatch(recordsActions.changeName(e.target.value))\r\n  }\r\n\r\n  const onMessageChange = (e) => {\r\n    dispatch(recordsActions.clearMessageError())\r\n    dispatch(recordsActions.changeMessage(e.target.value))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"section-title\">Leave your thoughts here</h2>\r\n      <form className=\"new-message-form\" onSubmit={onSubmit}>\r\n        <label className=\"field\">\r\n          <input\r\n            className=\"field__name\"\r\n            onChange={onNameChange}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Your name\" />\r\n          <div className='error'>{errors.name}</div>\r\n        </label>\r\n        <label className=\"field\">\r\n          <textarea\r\n            className=\"field__message\"\r\n            onChange={onMessageChange}\r\n            value={message}\r\n            name=\"message\"\r\n            rows=\"3\"\r\n            placeholder=\"Please type your message\" />\r\n          <div className='error'>{errors.message}</div>\r\n        </label>\r\n        <button ref={btn} className={`post-comment-btn ${isMessageUploading ? 'disabled' : null}`} type=\"submit\" disabled={isMessageUploading}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Record = ({ record }) => {\r\n  return (\r\n    <div className=\"record\">\r\n      <div className=\"record__author\">{record.name}</div>\r\n      <div className=\"record__message\">{record.message}</div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Record\r\n","import React from 'react'\nimport BeatLoader from 'react-spinners/BeatLoader'\n\nfunction Loader() {\n  return <BeatLoader size={30} margin={10} color=\"black\" loading={true} />\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Record from './Record'\r\nimport Loader from '../loader/Loader'\r\nimport recordsThunks from '../../redux/thunks/recordsThunks'\r\nimport recordsSelectors from '../../redux/selectors/recordsSelectors'\r\n\r\nconst RecordsList = () => {\r\n  const records = useSelector(recordsSelectors.recordsSelector)\r\n  const isLoading = useSelector(recordsSelectors.isLoadingSelector)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(recordsThunks.getRecords())\r\n  }\r\n  , [])\r\n\r\n  if (isLoading)\r\n    return <Loader />\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"section-title\">Responses</h2>\r\n      <div className='records-wrapper'>\r\n        {\r\n          records.length\r\n            ?\r\n            records.map(record => <Record\r\n              record={record}\r\n              key={record._id} />)\r\n            :\r\n            <div>No records</div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecordsList\r\n","import React from 'react'\r\n\r\nimport Section from '../components/section/Section'\r\nimport Form from '../components/form/Form'\r\nimport RecordList from '../components/recordList/RecordList'\r\n\r\nconst RecordsView = () => {\r\n  return (\r\n    <Section\r\n      auxClass=\"content-wrapper\"\r\n      fullWidth\r\n      flex>\r\n      <Section>\r\n        <Form />\r\n      </Section>\r\n      <Section\r\n        fullWidth>\r\n        <RecordList />\r\n      </Section>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default RecordsView\r\n","import React from 'react'\n\nimport Container from './components/container/Container'\nimport Header from './components/header/Header'\nimport Footer from './components/footer/Footer'\nimport RecordsView from './views/RecordsView'\n\nfunction App() {\n  return (\n    <Container>\n      <Header />\n      <RecordsView />\n      <Footer />\n    </Container>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { reducer as recordsReducer } from '../slices/recordsSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    records: recordsReducer\r\n  }\r\n})\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.scss'\nimport App from './App'\nimport store from './redux/store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}